// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Model;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ContextoDB))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiDrinkInTheHouse.Model.Bebida", b =>
                {
                    b.Property<int>("IDbebida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDbebida"));

                    b.Property<string>("BRAND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PORCENTAJE_ALC")
                        .HasColumnType("int");

                    b.Property<decimal>("PRECIO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RETORNABLE")
                        .HasColumnType("bit");

                    b.Property<int>("STOCK")
                        .HasColumnType("int");

                    b.Property<int>("VENVIDO")
                        .HasColumnType("int");

                    b.HasKey("IDbebida");

                    b.ToTable("Bebidas");
                });

            modelBuilder.Entity("ApiDrinkInTheHouse.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("APELLIDO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FECHA_NAC")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOMBRE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebApplication1.Model.VentaCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BebidaID")
                        .HasColumnType("int");

                    b.Property<int>("CANTIDAD")
                        .HasColumnType("int");

                    b.Property<string>("CLIENTE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITEM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TOTAL_CLIENTE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BebidaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("VentasCliente");
                });

            modelBuilder.Entity("WebApplication1.Model.VentaCliente", b =>
                {
                    b.HasOne("ApiDrinkInTheHouse.Model.Bebida", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiDrinkInTheHouse.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bebida");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
